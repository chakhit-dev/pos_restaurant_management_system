
import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.StandardCopyOption;
import java.sql.*;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Jonathan_Dev
 */
public class frame_category_manage extends javax.swing.JFrame {

    /**
     * Creates new form frame_category_manage
     */
    public frame_category_manage() {
        initComponents();
        
        loadCategoryData();
        loadComboBoxData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        category_detail = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        item_detail = new javax.swing.JTable();
        jLayeredPane3 = new javax.swing.JLayeredPane();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        category_id = new javax.swing.JTextField();
        category_name = new javax.swing.JTextField();
        btn_categoryadd = new javax.swing.JButton();
        btn_categoryupdate = new javax.swing.JButton();
        btn_categorydelete = new javax.swing.JButton();
        btn_categoryclear = new javax.swing.JButton();
        lb_categoryid = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLayeredPane4 = new javax.swing.JLayeredPane();
        jcb_category = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txt_foodid = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txt_foodname = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txt_foodlabel = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txt_foodimg = new javax.swing.JTextField();
        btn_selectfile = new javax.swing.JButton();
        btn_itemupdate = new javax.swing.JButton();
        btn_itemdelete = new javax.swing.JButton();
        btn_itemadd = new javax.swing.JButton();
        btn_itemclear = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        txt_foodprice = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        lb_foodid = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMenuItem3 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        category_detail.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "ID", "Name"
            }
        ));
        category_detail.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                category_detailMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(category_detail);

        item_detail.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Name", "Label", "Price", "Img", "Date"
            }
        ));
        item_detail.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                item_detailMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(item_detail);
        if (item_detail.getColumnModel().getColumnCount() > 0) {
            item_detail.getColumnModel().getColumn(0).setMaxWidth(40);
        }

        jLayeredPane3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel2.setText("Category ID : ");

        jLabel3.setText("Category Name : ");

        btn_categoryadd.setText("Add");
        btn_categoryadd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_categoryaddActionPerformed(evt);
            }
        });

        btn_categoryupdate.setText("Update");
        btn_categoryupdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_categoryupdateActionPerformed(evt);
            }
        });

        btn_categorydelete.setText("Delete");
        btn_categorydelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_categorydeleteActionPerformed(evt);
            }
        });

        btn_categoryclear.setText("Clear");
        btn_categoryclear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_categoryclearActionPerformed(evt);
            }
        });

        lb_categoryid.setText("NULL");

        jLabel4.setText("ID : ");

        jLayeredPane3.setLayer(jLabel2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane3.setLayer(jLabel3, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane3.setLayer(category_id, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane3.setLayer(category_name, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane3.setLayer(btn_categoryadd, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane3.setLayer(btn_categoryupdate, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane3.setLayer(btn_categorydelete, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane3.setLayer(btn_categoryclear, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane3.setLayer(lb_categoryid, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane3.setLayer(jLabel4, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane3Layout = new javax.swing.GroupLayout(jLayeredPane3);
        jLayeredPane3.setLayout(jLayeredPane3Layout);
        jLayeredPane3Layout.setHorizontalGroup(
            jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane3Layout.createSequentialGroup()
                        .addGroup(jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addGroup(jLayeredPane3Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lb_categoryid)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(category_name, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(category_id, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane3Layout.createSequentialGroup()
                        .addComponent(btn_categoryadd)
                        .addGap(18, 18, 18)
                        .addComponent(btn_categorydelete)
                        .addGap(18, 18, 18)
                        .addComponent(btn_categoryupdate)
                        .addGap(18, 18, 18)
                        .addComponent(btn_categoryclear)))
                .addGap(16, 16, 16))
        );
        jLayeredPane3Layout.setVerticalGroup(
            jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane3Layout.createSequentialGroup()
                .addContainerGap(8, Short.MAX_VALUE)
                .addGroup(jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lb_categoryid)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(category_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(category_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_categoryadd)
                    .addComponent(btn_categoryupdate)
                    .addComponent(btn_categorydelete)
                    .addComponent(btn_categoryclear))
                .addGap(16, 16, 16))
        );

        jLayeredPane4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jcb_category.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jcb_category.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcb_categoryActionPerformed(evt);
            }
        });

        jLabel1.setText("Category : ");

        jLabel5.setText("Food ID : ");

        txt_foodid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_foodidActionPerformed(evt);
            }
        });

        jLabel6.setText("Food Name : ");

        jLabel9.setText("Food Label:");

        jLabel10.setText("Food Img : ");

        btn_selectfile.setText("Choose");
        btn_selectfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_selectfileActionPerformed(evt);
            }
        });

        btn_itemupdate.setText("Update");
        btn_itemupdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_itemupdateActionPerformed(evt);
            }
        });

        btn_itemdelete.setText("Delete");
        btn_itemdelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_itemdeleteActionPerformed(evt);
            }
        });

        btn_itemadd.setText("Add");
        btn_itemadd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_itemaddActionPerformed(evt);
            }
        });

        btn_itemclear.setText("Clear");
        btn_itemclear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_itemclearActionPerformed(evt);
            }
        });

        jLabel11.setText("Food Price : ");

        jLabel12.setText("Food ID : ");

        lb_foodid.setText("NULL");

        jLayeredPane4.setLayer(jcb_category, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane4.setLayer(jLabel1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane4.setLayer(jLabel5, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane4.setLayer(txt_foodid, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane4.setLayer(jLabel6, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane4.setLayer(txt_foodname, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane4.setLayer(jLabel9, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane4.setLayer(txt_foodlabel, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane4.setLayer(jLabel10, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane4.setLayer(txt_foodimg, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane4.setLayer(btn_selectfile, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane4.setLayer(btn_itemupdate, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane4.setLayer(btn_itemdelete, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane4.setLayer(btn_itemadd, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane4.setLayer(btn_itemclear, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane4.setLayer(jLabel11, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane4.setLayer(txt_foodprice, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane4.setLayer(jLabel12, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane4.setLayer(lb_foodid, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane4Layout = new javax.swing.GroupLayout(jLayeredPane4);
        jLayeredPane4.setLayout(jLayeredPane4Layout);
        jLayeredPane4Layout.setHorizontalGroup(
            jLayeredPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane4Layout.createSequentialGroup()
                .addGroup(jLayeredPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jLayeredPane4Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_itemadd)
                        .addGap(18, 18, 18)
                        .addComponent(btn_itemdelete)
                        .addGap(18, 18, 18)
                        .addComponent(btn_itemupdate)
                        .addGap(18, 18, 18)
                        .addComponent(btn_itemclear))
                    .addGroup(jLayeredPane4Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jLayeredPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jLayeredPane4Layout.createSequentialGroup()
                                .addGroup(jLayeredPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel10))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jLayeredPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txt_foodlabel)
                                    .addComponent(txt_foodname, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txt_foodid)
                                    .addComponent(jcb_category, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane4Layout.createSequentialGroup()
                                        .addComponent(txt_foodimg)
                                        .addGap(18, 18, 18)
                                        .addComponent(btn_selectfile))))
                            .addGroup(jLayeredPane4Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txt_foodprice, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jLayeredPane4Layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lb_foodid)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addGap(17, 17, 17))
        );
        jLayeredPane4Layout.setVerticalGroup(
            jLayeredPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLayeredPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(lb_foodid))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jLayeredPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jcb_category, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jLayeredPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txt_foodid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jLayeredPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txt_foodname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jLayeredPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txt_foodlabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addGroup(jLayeredPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(txt_foodprice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jLayeredPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txt_foodimg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_selectfile))
                .addGap(18, 18, 18)
                .addGroup(jLayeredPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_itemupdate)
                    .addComponent(btn_itemdelete)
                    .addComponent(btn_itemadd)
                    .addComponent(btn_itemclear))
                .addGap(7, 7, 7))
        );

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel7.setText("Food Detail");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel8.setText("Category Detail");

        jMenu1.setText("Home");

        jMenuItem2.setText("Home");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Manager");

        jMenuItem1.setText("Product");
        jMenuItem1.setEnabled(false);
        jMenu2.add(jMenuItem1);
        jMenu2.add(jSeparator1);

        jMenuItem3.setText("Summary");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem3);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 700, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLayeredPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 414, Short.MAX_VALUE)
                                .addGap(20, 20, 20))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLayeredPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(346, 346, 346))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLayeredPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLayeredPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(20, 20, 20))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txt_foodidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_foodidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_foodidActionPerformed

    private void item_detailMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_item_detailMouseClicked
        // TODO add your handling code here:
        
        JTable table = (JTable) evt.getSource();  // หรือ category_detail ถ้าใช้ตัวแปรนี้
        int row = table.rowAtPoint(evt.getPoint());  // หาตำแหน่งแถวที่คลิก
        int column = table.columnAtPoint(evt.getPoint());  // หาตำแหน่งคอลัมน์ที่คลิก

        // ตรวจสอบว่าเป็นการคลิกแถวที่มีข้อมูลหรือไม่ (แถวที่ถูกเลือก)
        if (row >= 0) {
            // ดึงข้อมูลจากเซลล์ในแถวที่คลิก โดยที่เราสนใจแค่คอลัมน์ 0 (id) และคอลัมน์ 1 (name)
            Object id = table.getValueAt(row, 0);  // ค่าจากคอลัมน์ 0 คือ id
            Object name = table.getValueAt(row, 1);  // ค่าจากคอลัมน์ 1 คือ name
            Object label = table.getValueAt(row, 2);  // ค่าจากคอลัมน์ 1 คือ name
            Object price = table.getValueAt(row, 3);  // ค่าจากคอลัมน์ 1 คือ name
            Object img = table.getValueAt(row, 4);  // ค่าจากคอลัมน์ 1 คือ name

            txt_foodid.setText(id.toString());
            txt_foodname.setText(name.toString());
            txt_foodlabel.setText(label.toString());
            txt_foodprice.setText(price.toString());
            txt_foodimg.setText(img.toString());
            lb_foodid.setText(id.toString());
           
        }
        
        //System.out.println("Click");
        
    }//GEN-LAST:event_item_detailMouseClicked

    private void category_detailMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_category_detailMouseClicked
        // TODO add your handling code here:
        
        

        // ตรวจสอบว่าแหล่งที่มาของเหตุการณ์คือ JTable หรือไม่
        JTable table = (JTable) evt.getSource();  // หรือ category_detail ถ้าใช้ตัวแปรนี้
        int row = table.rowAtPoint(evt.getPoint());  // หาตำแหน่งแถวที่คลิก
        int column = table.columnAtPoint(evt.getPoint());  // หาตำแหน่งคอลัมน์ที่คลิก

        // ตรวจสอบว่าเป็นการคลิกแถวที่มีข้อมูลหรือไม่ (แถวที่ถูกเลือก)
        if (row >= 0) {
            // ดึงข้อมูลจากเซลล์ในแถวที่คลิก โดยที่เราสนใจแค่คอลัมน์ 0 (id) และคอลัมน์ 1 (name)
            Object id = table.getValueAt(row, 0);  // ค่าจากคอลัมน์ 0 คือ id
            Object name = table.getValueAt(row, 1);  // ค่าจากคอลัมน์ 1 คือ name

            lb_categoryid.setText(id.toString());
            category_id.setText((String) id);
            category_name.setText((String) name);
           
        }
        
        //System.out.println("Click");
    }//GEN-LAST:event_category_detailMouseClicked

    private void jcb_categoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcb_categoryActionPerformed
        // TODO add your handling code here:
        
        String selectData = jcb_category.getSelectedItem()+"";
        
        loadItemData(selectData);
        lb_foodid.setText("NULL");
        
        //System.out.println("selectData : " + selectData);
        
    }//GEN-LAST:event_jcb_categoryActionPerformed

    private void btn_categoryaddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_categoryaddActionPerformed
        // TODO add your handling code here:
        
        queryClass qc = new queryClass();
        
        qc.insertCatetoryData(category_id.getText(), category_name.getText());
        loadCategoryData();
        clearCategoryData();
        loadComboBoxData();
        
        JOptionPane.showMessageDialog(this, "Insert Data Successful !");
    }//GEN-LAST:event_btn_categoryaddActionPerformed

    private void btn_categorydeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_categorydeleteActionPerformed
        // TODO add your handling code here:
        queryClass qc = new queryClass();
        
        int result = JOptionPane.showConfirmDialog(this, "Are you sure you want to delete the data?", "Food Manager", JOptionPane.YES_NO_OPTION, JOptionPane.ERROR_MESSAGE);
        
        if (result == JOptionPane.YES_OPTION) {
            qc.deleteCategoryData(category_id.getText());
            loadCategoryData();
            lb_categoryid.setText("");
            clearCategoryData();
            loadComboBoxData();
        }
       
    }//GEN-LAST:event_btn_categorydeleteActionPerformed

    private void btn_categoryclearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_categoryclearActionPerformed
        // TODO add your handling code here:
        lb_categoryid.setText("");
        clearCategoryData();
    }//GEN-LAST:event_btn_categoryclearActionPerformed

    private void btn_categoryupdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_categoryupdateActionPerformed
        // TODO add your handling code here:
        queryClass qc = new queryClass();
        
        //System.out.println("CT_NAME = " + category_id.getText() + "CT_LABEL + " + category_name.getText());
        
        int result = JOptionPane.showConfirmDialog(this, "Are you sure you want to update the data?", "Food Manager", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
        
        if (result == JOptionPane.YES_OPTION) {
            qc.updateCategoryData(lb_categoryid.getText(), category_id.getText(), category_name.getText());
            clearCategoryData();
            lb_categoryid.setText("");
            loadCategoryData();
            loadComboBoxData();
        }
        

        
    }//GEN-LAST:event_btn_categoryupdateActionPerformed

    private void btn_itemaddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_itemaddActionPerformed
        // TODO add your handling code here:
        queryClass qc = new queryClass();
        
        //int fid = Integer.parseInt(txt_foodid.getText());
        String fcategory = (String) jcb_category.getSelectedItem();
        String ffoodname = txt_foodname.getText();
//        String flabel = qc.getCategoryByName(ffoodname);
        String flabel = txt_foodlabel.getText();
        double fprice = Double.parseDouble(txt_foodprice.getText());
        String fimg = txt_foodimg.getText();
        String ftime = getCurrentTime();
        
        qc.insertItemData(fcategory, ffoodname, flabel, fprice, fimg, ftime);
        clearItemData();
        loadItemData(fcategory);
    }//GEN-LAST:event_btn_itemaddActionPerformed

    private void btn_selectfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_selectfileActionPerformed
        // TODO add your handling code here:

        JFileChooser fileChooser = new JFileChooser();

        // ตั้งค่าการกรองให้แสดงเฉพาะไฟล์ PNG
        fileChooser.setFileFilter(new javax.swing.filechooser.FileNameExtensionFilter("PNG Images", "png"));

        // เปิด FileChooser
        int result = fileChooser.showOpenDialog(this);

        if (result == JFileChooser.APPROVE_OPTION) {
            // ดึงไฟล์ที่เลือก
            File selectedFile = fileChooser.getSelectedFile();
            System.out.println("Selected file: " + selectedFile.getAbsolutePath());

            // กำหนดที่เก็บไฟล์ในโฟลเดอร์ imgs ที่อยู่ใน src ของโปรเจ็ค
            File destinationFolder = new File("src/imgs");

            // ถ้าโฟลเดอร์ imgs ไม่มีให้สร้าง
            if (!destinationFolder.exists()) {
                destinationFolder.mkdirs();
            }

            // กำหนดชื่อไฟล์ปลายทาง
            File destinationFile = new File(destinationFolder, selectedFile.getName());

            // คัดลอกไฟล์จากที่เก็บเดิมไปยังโฟลเดอร์ imgs
            try {
                Files.copy(selectedFile.toPath(), destinationFile.toPath(), StandardCopyOption.REPLACE_EXISTING);
                System.out.println("File copied successfully to " + destinationFile.getAbsolutePath());

                // ตั้งชื่อไฟล์ที่เลือกไปยัง JTextField
                 String fileNameWithoutExtension = selectedFile.getName().substring(0, selectedFile.getName().lastIndexOf('.'));
                 
                txt_foodimg.setText(fileNameWithoutExtension);
            } catch (IOException ex) {
                ex.printStackTrace();
                System.out.println("Failed to copy the file.");
            }
        } else {
            System.out.println("No file selected.");
        }
    }//GEN-LAST:event_btn_selectfileActionPerformed

    private void btn_itemdeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_itemdeleteActionPerformed
        // TODO add your handling code here:
        queryClass qc = new queryClass();

        int result = JOptionPane.showConfirmDialog(this, "Are you sure you want to delete the data?", "Food Manager", JOptionPane.YES_NO_OPTION, JOptionPane.ERROR_MESSAGE);
        
        if (result == JOptionPane.YES_OPTION) {
            int sItemID = Integer.parseInt(txt_foodid.getText());
            String sCategory = (String) jcb_category.getSelectedItem();

            qc.deleteItemData(sItemID);
            clearItemData();
            loadItemData(sCategory);
        }
        
    }//GEN-LAST:event_btn_itemdeleteActionPerformed

    private void btn_itemupdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_itemupdateActionPerformed
        // TODO add your handling code here:
        queryClass qc = new queryClass();
        
        int fid = Integer.parseInt(lb_foodid.getText());
        String fcategory = (String) jcb_category.getSelectedItem();
        String ffoodname = txt_foodname.getText();
        String flabel = txt_foodlabel.getText();
        double fprice = Double.parseDouble(txt_foodprice.getText());
        String fimg = txt_foodimg.getText();
        String ftime = getCurrentTime();
        
        int result = JOptionPane.showConfirmDialog(this, "Are you sure you want to update the data?", "Food Manager", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        
        if (result == JOptionPane.YES_OPTION) {
            qc.updateItemData(fid, fcategory, ffoodname, flabel, fprice, fimg, ftime);

            clearItemData();
            loadItemData(fcategory);
        }
        

        
    }//GEN-LAST:event_btn_itemupdateActionPerformed

    private void btn_itemclearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_itemclearActionPerformed
        // TODO add your handling code here:
        clearItemData();
        lb_foodid.setText("NULL");
    }//GEN-LAST:event_btn_itemclearActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        this.dispose();
        new frame_main().setVisible(true);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
        this.dispose();
        new frame_history().setVisible(true);
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frame_category_manage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frame_category_manage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frame_category_manage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frame_category_manage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frame_category_manage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_categoryadd;
    private javax.swing.JButton btn_categoryclear;
    private javax.swing.JButton btn_categorydelete;
    private javax.swing.JButton btn_categoryupdate;
    private javax.swing.JButton btn_itemadd;
    private javax.swing.JButton btn_itemclear;
    private javax.swing.JButton btn_itemdelete;
    private javax.swing.JButton btn_itemupdate;
    private javax.swing.JButton btn_selectfile;
    private javax.swing.JTable category_detail;
    private javax.swing.JTextField category_id;
    private javax.swing.JTextField category_name;
    private javax.swing.JTable item_detail;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLayeredPane jLayeredPane3;
    private javax.swing.JLayeredPane jLayeredPane4;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JComboBox<String> jcb_category;
    private javax.swing.JLabel lb_categoryid;
    private javax.swing.JLabel lb_foodid;
    private javax.swing.JTextField txt_foodid;
    private javax.swing.JTextField txt_foodimg;
    private javax.swing.JTextField txt_foodlabel;
    private javax.swing.JTextField txt_foodname;
    private javax.swing.JTextField txt_foodprice;
    // End of variables declaration//GEN-END:variables

    
    public static String getCurrentTime() {
        LocalDateTime currentDateTime = LocalDateTime.now();
        
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss");
        
        return currentDateTime.format(formatter);
    }
    
    public void loadCategoryData() {
        // สร้างการเชื่อมต่อกับฐานข้อมูล
        
        queryClass qc = new queryClass();
        Connection conn = qc.getConnection();
        
        DefaultTableModel model = (DefaultTableModel) category_detail.getModel();

        if (conn != null) {
            try {
                // Query ข้อมูลจากฐานข้อมูล
                String query = "SELECT ct_name, ct_lebel FROM food_category";
                Statement stmt = conn.createStatement();
                ResultSet rs = stmt.executeQuery(query);

                model.setRowCount(0);
                
                // ทำการเพิ่มข้อมูลลงใน JTable
                while (rs.next()) {
                    String id = rs.getString("ct_name");
                    String categoryId = rs.getString("ct_lebel");

                    // เพิ่มแถวข้อมูลเข้าใน model ของ JTable
                    model.addRow(new Object[]{id, categoryId});
                }

                // ปิดการเชื่อมต่อ
                rs.close();
                stmt.close();
                conn.close();

            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
    }

    private void loadItemData(String data) {
        
        System.out.println("loadItemData Data = "+ data);
        
        queryClass qc = new queryClass();
        
        DefaultTableModel model = (DefaultTableModel) item_detail.getModel();
                
        try (Connection conn = qc.getConnection();
             Statement stmt = conn.createStatement()) {

            String query = "SELECT food_id, food_name, food_label, food_price, food_img, food_date FROM food_items WHERE food_category = ?";
            
            try (PreparedStatement ps = conn.prepareStatement(query)) {
                ps.setString(1, data);

                ResultSet rs = ps.executeQuery();

                model.setRowCount(0);

                while (rs.next()) {
                    int food_id = rs.getInt("food_id");
                    String food_name = rs.getString("food_name");
                    String food_label = rs.getString("food_label");
                    String food_price = rs.getString("food_price");
                    String food_img = rs.getString("food_img");
                    String food_date = rs.getString("food_date");  
                    
                    //System.out.println("food_id : " + food_id + "food_label");

                    model.addRow(new Object[]{food_id, food_name, food_label, food_price, food_img, food_date});
                }
               

            } catch (SQLException e) {
                e.printStackTrace();
            }

        } catch (SQLException e) {
            e.printStackTrace();
        }
        
    }

    
    public void loadComboBoxData() {
        // สร้างการเชื่อมต่อกับฐานข้อมูล
        queryClass qc = new queryClass();  // สมมติว่า queryClass เป็นคลาสที่ทำการเชื่อมต่อฐานข้อมูล
        try (Connection conn = qc.getConnection();
             Statement stmt = conn.createStatement()) {

            // Query ข้อมูลจากฐานข้อมูลเพื่อดึงแค่ ct_label จากตาราง food_category
            String query = "SELECT ct_lebel FROM food_category";
            ResultSet rs = stmt.executeQuery(query);

            // ลบข้อมูลเดิมใน JComboBox ก่อน
            jcb_category.removeAllItems();

            // เพิ่มข้อมูลจากฐานข้อมูลเข้าไปใน JComboBox
            while (rs.next()) {
                String categoryLabel = rs.getString("ct_lebel");
                jcb_category.addItem(categoryLabel);
            }

        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
    
    public void clearCategoryData(){
        category_id.setText("");
        category_name.setText("");
    }
    
    public void clearItemData(){
        txt_foodid.setText("");
        txt_foodname.setText("");
        txt_foodlabel.setText("");
        txt_foodprice.setText("");
        txt_foodimg.setText("");
    }
    
    
}
